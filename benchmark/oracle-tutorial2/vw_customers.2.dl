% join on non-pk, projection on non-pk

source customers('CUSTOMER_ID':real, 'NAME':string, 'ADDRESS':string, 'WEBSITE':string, 'CREDIT_LIMIT':real).
source contacts('CONTACT_ID':real, 'FIRST_NAME':string, 'LAST_NAME':string, 'EMAIL':string, 'PHONE':string, 'CUSTOMER_ID':real).
source next_customer_id('ID':real).
source next_contact_id('ID':real).

view vw_customers('NAME':string, 'ADDRESS':string, 'WEBSITE':string, 'CREDIT_LIMIT':real, 'FIRST_NAME':string, 'LAST_NAME':string, 'EMAIL':string, 'PHONE':string).

IS:[
    customers0(CUSTOMER_ID, NAME, ADDRESS, WEBSITE, CREDIT_LIMIT) :- customers(CUSTOMER_ID, NAME, ADDRESS, WEBSITE, CREDIT_LIMIT).
    contacts0(CONTACT_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CUSTOMER_ID) :- contacts(CONTACT_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CUSTOMER_ID).
    next_customer_id0(ID) :- next_customer_id(ID).
    next_contact_id0(ID) :- next_contact_id(ID).
    vw_customers0(NAME, ADDRESS, WEBSITE, CREDIT_LIMIT, FIRST_NAME, LAST_NAME, EMAIL, PHONE) :- customers0(CUSTOMER_ID, NAME, ADDRESS, WEBSITE, CREDIT_LIMIT), contacts0(CONTACT_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CUSTOMER_ID).
].

% constraints
% primary key
PK(customers,['CUSTOMER_ID']).
PK(contacts,['CONTACT_ID']).
% foreign key
_|_ :- contacts(_, _, _, _, _, CUSTOMER_ID), not customers(CUSTOMER_ID, _, _, _, _).
% join dependency
_|_ :- vw_customers(NAME, ADDRESS, WEBSITE, CREDIT_LIMIT, _, _, _, _), vw_customers(_, _, _, _, FIRST_NAME, LAST_NAME, EMAIL, PHONE), not vw_customers(NAME, ADDRESS, WEBSITE, CREDIT_LIMIT, FIRST_NAME, LAST_NAME, EMAIL, PHONE).
% new CUSTOMER_ID
_|_ :- customers(CUSTOMER_ID, _, _, _, _), next_customer_id(CUSTOMER_ID).
_|_ :- not next_customer_id(_).

% new CONTACT_ID
_|_ :- contacts(CONTACT_ID, _, _, _, _,_), next_contact_id(CONTACT_ID).
_|_ :- not next_contact_id(_).

% non duplication for non pk attributes in customers
_|_ :- customers(CUSTOMER_ID_1, NAME, ADDRESS, WEBSITE, CREDIT_LIMIT), customers(CUSTOMER_ID_2, NAME, ADDRESS, WEBSITE, CREDIT_LIMIT), CUSTOMER_ID_1 <> CUSTOMER_ID_2.

% non duplication for non pk attributes in contacts
_|_ :- contacts(CONTACT_ID_1, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CUSTOMER_ID), contacts(CONTACT_ID_2, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CUSTOMER_ID), CONTACT_ID_1 <> CONTACT_ID_2.


% allow only insertion on the view
% _|_  :- customers(CUSTOMER_ID, NAME, ADDRESS, WEBSITE, CREDIT_LIMIT), contacts(CONTACT_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CUSTOMER_ID), not vw_customers(NAME, ADDRESS, WEBSITE, CREDIT_LIMIT, FIRST_NAME, LAST_NAME, EMAIL, PHONE).

% update strategy for insertion
+vw_customers(NAME, ADDRESS, WEBSITE, CREDIT_LIMIT, FIRST_NAME, LAST_NAME, EMAIL, PHONE) :- +contacts(CONTACT_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CUSTOMER_ID), customers(CUSTOMER_ID, NAME, ADDRESS, WEBSITE, CREDIT_LIMIT), next_contact_id(CONTACT_ID), next_customer_id(CUSTOMER_ID).
+vw_customers(NAME, ADDRESS, WEBSITE, CREDIT_LIMIT, FIRST_NAME, LAST_NAME, EMAIL, PHONE) :- +contacts(CONTACT_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CUSTOMER_ID), +customers(CUSTOMER_ID, NAME, ADDRESS, WEBSITE, CREDIT_LIMIT), next_contact_id(CONTACT_ID), next_customer_id(CUSTOMER_ID).

% update strategy for deletion
-vw_customers(NAME, ADDRESS, WEBSITE, CREDIT_LIMIT, FIRST_NAME, LAST_NAME, EMAIL, PHONE) :- -contacts(CONTACT_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CUSTOMER_ID), customers(CUSTOMER_ID, NAME, ADDRESS, WEBSITE, CREDIT_LIMIT).


% view definition
% vw_customers(NAME, ADDRESS, WEBSITE, CREDIT_LIMIT, FIRST_NAME, LAST_NAME, EMAIL, PHONE) :- customers(CUSTOMER_ID, NAME, ADDRESS, WEBSITE, CREDIT_LIMIT), contacts(CONTACT_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CUSTOMER_ID).
