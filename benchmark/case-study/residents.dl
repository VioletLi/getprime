source male('EMP_NAME':string, 'BIRTH_DATE':string).
source female('EMP_NAME':string, 'BIRTH_DATE':string).
source others('EMP_NAME':string, 'BIRTH_DATE':string, 'GENDER':string).
view residents('EMP_NAME':string,'BIRTH_DATE':string,'GENDER':string).

IS:[
    male0(E, B) :- male(E, B).
    female0(E, B) :- female(E, B).
    others0(E, B, G) :- others(E, B, G).
    residents0(E, B, G) :- male0(E, B), G = 'M'.
    residents0(E, B, G) :- female0(E, B), G = 'F'.
    residents0(E, B, G) :- others0(E, B, G).
].

+residents(E, B, G) :- +male(E, B), not male(E, B), not others(E, B, G), G = 'M'.
+residents(E, B, G) :- +female(E, B), not female(E, B), not others(E, B, G), G = 'F'.
+residents(E, B, G) :- +others(E, B, G), not G = 'M', not G = 'F', not others(E, B, G).
-residents(E, B, G) :- -male(E, B), not others(E, B, G), G = 'M'.
-residents(E, B, G) :- -female(E, B), not others(E, B, G), G = 'F'.
-residents(E, B, G) :- -male(E, B), -others(E, B, G), G = 'M'.
-residents(E, B, G) :- -female(E, B), -others(E, B, G), G = 'F'.
-residents(E, B, G) :- -others(E, B, G), not male(E, B), G = 'M'.
-residents(E, B, G) :- -others(E, B, G), not female(E, B), G = 'F'.
-residents(E, B, G) :- -others(E, B, G), not G = 'M', not G = 'F'.
