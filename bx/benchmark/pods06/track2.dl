// projection
#include "./testcases/track2/mixture.dl"

.type int <: number
.type string <: symbol

.decl tracks10(TRACK:string, DATE:int, RATING:int, ALBUM:string, QUANTITY:int)
.decl tracks20(TRACK:string, RATING:int, ALBUM:string, QUANTITY:int)

.decl tracks1(TRACK:string, DATE:int, RATING:int, ALBUM:string, QUANTITY:int)
.decl tracks1_ins(TRACK:string, DATE:int, RATING:int, ALBUM:string, QUANTITY:int)
.decl tracks1_del(TRACK:string, DATE:int, RATING:int, ALBUM:string, QUANTITY:int)

.decl tracks2(TRACK:string, RATING:int, ALBUM:string, QUANTITY:int)
.decl tracks2_ins(TRACK:string, RATING:int, ALBUM:string, QUANTITY:int)
.decl tracks2_del(TRACK:string, RATING:int, ALBUM:string, QUANTITY:int)

.decl tracks2_prime(TRACK:string, RATING:int, ALBUM:string, QUANTITY:int)
.decl tracks2_prime_ins(TRACK:string, RATING:int, ALBUM:string, QUANTITY:int)
.decl tracks2_prime_del(TRACK:string, RATING:int, ALBUM:string, QUANTITY:int)

.decl tracks1_prime(TRACK:string, DATE:int, RATING:int, ALBUM:string, QUANTITY:int)
.decl tracks1_prime_ins(TRACK:string, DATE:int, RATING:int, ALBUM:string, QUANTITY:int)
.decl tracks1_prime_del(TRACK:string, DATE:int, RATING:int, ALBUM:string, QUANTITY:int)

.decl precondition(errNo:string)


// -- constraints --
precondition("sourcePKError1") :- tracks1(TRACK, DATE, _, _, _), tracks1(TRACK, DATE1, _, _, _), ! DATE = DATE1.
precondition("sourcePKError2") :- tracks1(TRACK, _, RATING, _, _), tracks1(TRACK, _, RATING1, _, _), ! RATING = RATING1.
precondition("sourcePKError3") :- tracks1(TRACK, _, _, ALBUM, _), tracks1(TRACK, _, _, ALBUM1, _), ! ALBUM = ALBUM1.
precondition("sourcePKError4") :- tracks1(TRACK, _, _, _, QUANTITY), tracks1(TRACK, _, _, _, QUANTITY1), ! QUANTITY = QUANTITY1.
precondition("viewPKError1") :- tracks2_prime(TRACK, RATING, _, _), tracks2_prime(TRACK, RATING1, _, _), ! RATING = RATING1.
precondition("viewPKError2") :- tracks2_prime(TRACK, _, ALBUM, _), tracks2_prime(TRACK, _, ALBUM1, _), ! ALBUM = ALBUM1.
precondition("viewPKError3") :- tracks2_prime(TRACK, _, _, QUANTITY), tracks2_prime(TRACK, _, _, QUANTITY1), ! QUANTITY = QUANTITY1.


// -- primetial source and view --

tracks10(T, D, R, A, Q) :- tracks1(T, D, R, A, Q) , ! D = 2018.
tracks20(T, R, A, Q) :- tracks10(T, _, R, A, Q).


// -- get --

tracks2(TRACK, RATING, ALBUM, QUANTITY) :- tracks20(TRACK, RATING, ALBUM, QUANTITY) , ! tracks2_del(TRACK, RATING, ALBUM, QUANTITY).
tracks2(TRACK, RATING, ALBUM, QUANTITY) :- tracks2_ins(TRACK, RATING, ALBUM, QUANTITY).
tracks1_ins(TRACK, DATE, RATING, ALBUM, QUANTITY) :- tracks1(TRACK, DATE, RATING, ALBUM, QUANTITY) , ! tracks10(TRACK, DATE, RATING, ALBUM, QUANTITY).
tracks1_del(TRACK, DATE, RATING, ALBUM, QUANTITY) :- tracks10(TRACK, DATE, RATING, ALBUM, QUANTITY) , ! tracks1(TRACK, DATE, RATING, ALBUM, QUANTITY).
tracks2_del(T1, R1, A1, Q1) :- tracks1_del(T1, D1, R1, A1, Q1).
tracks2_ins(T, R, A, Q) :- tracks1_ins(T, D, R, A, Q) , ! tracks1(T, _, R, A, Q) , D = 2018.
tracks2_del(TRACK, RATING, ALBUM, QUANTITY) :- tracks1_del(TRACK, D1, RATING, ALBUM, QUANTITY) , tracks1_ins(TRACK, D, RATING, ALBUM, QUANTITY1) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! QUANTITY = QUANTITY1.
tracks2_ins(TRACK, RATING, ALBUM, QUANTITY1) :- tracks1_del(TRACK, D1, RATING, ALBUM, QUANTITY) , tracks1_ins(TRACK, D, RATING, ALBUM, QUANTITY1) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! QUANTITY = QUANTITY1.
tracks2_del(TRACK, RATING, ALBUM, QUANTITY) :- tracks1_del(TRACK, D1, RATING, ALBUM, QUANTITY) , tracks1_ins(TRACK, D, RATING, ALBUM1, QUANTITY) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! ALBUM = ALBUM1.
tracks2_ins(TRACK, RATING, ALBUM1, QUANTITY) :- tracks1_del(TRACK, D1, RATING, ALBUM, QUANTITY) , tracks1_ins(TRACK, D, RATING, ALBUM1, QUANTITY) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! ALBUM = ALBUM1.
tracks2_del(TRACK, RATING, ALBUM, QUANTITY) :- tracks1_del(TRACK, D1, RATING, ALBUM, QUANTITY) , tracks1_ins(TRACK, D, RATING, ALBUM1, QUANTITY1) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! ALBUM = ALBUM1 , ! QUANTITY = QUANTITY1.
tracks2_ins(TRACK, RATING, ALBUM1, QUANTITY1) :- tracks1_del(TRACK, D1, RATING, ALBUM, QUANTITY) , tracks1_ins(TRACK, D, RATING, ALBUM1, QUANTITY1) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! ALBUM = ALBUM1 , ! QUANTITY = QUANTITY1.
tracks2_del(TRACK, RATING, ALBUM, QUANTITY) :- tracks1_del(TRACK, D1, RATING, ALBUM, QUANTITY) , tracks1_ins(TRACK, D, RATING1, ALBUM, QUANTITY) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! RATING = RATING1.
tracks2_ins(TRACK, RATING1, ALBUM, QUANTITY) :- tracks1_del(TRACK, D1, RATING, ALBUM, QUANTITY) , tracks1_ins(TRACK, D, RATING1, ALBUM, QUANTITY) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! RATING = RATING1.
tracks2_del(TRACK, RATING, ALBUM, QUANTITY) :- tracks1_del(TRACK, D1, RATING, ALBUM, QUANTITY) , tracks1_ins(TRACK, D, RATING1, ALBUM, QUANTITY1) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! RATING = RATING1 , ! QUANTITY = QUANTITY1.
tracks2_ins(TRACK, RATING1, ALBUM, QUANTITY1) :- tracks1_del(TRACK, D1, RATING, ALBUM, QUANTITY) , tracks1_ins(TRACK, D, RATING1, ALBUM, QUANTITY1) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! RATING = RATING1 , ! QUANTITY = QUANTITY1.
tracks2_del(TRACK, RATING, ALBUM, QUANTITY) :- tracks1_del(TRACK, D1, RATING, ALBUM, QUANTITY) , tracks1_ins(TRACK, D, RATING1, ALBUM1, QUANTITY) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! RATING = RATING1 , ! ALBUM = ALBUM1.
tracks2_ins(TRACK, RATING1, ALBUM1, QUANTITY) :- tracks1_del(TRACK, D1, RATING, ALBUM, QUANTITY) , tracks1_ins(TRACK, D, RATING1, ALBUM1, QUANTITY) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! RATING = RATING1 , ! ALBUM = ALBUM1.
tracks2_del(TRACK, RATING, ALBUM, QUANTITY) :- tracks1_del(TRACK, D1, RATING, ALBUM, QUANTITY) , tracks1_ins(TRACK, D, RATING1, ALBUM1, QUANTITY1) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! RATING = RATING1 , ! ALBUM = ALBUM1 , ! QUANTITY = QUANTITY1.
tracks2_ins(TRACK, RATING1, ALBUM1, QUANTITY1) :- tracks1_del(TRACK, D1, RATING, ALBUM, QUANTITY) , tracks1_ins(TRACK, D, RATING1, ALBUM1, QUANTITY1) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! RATING = RATING1 , ! ALBUM = ALBUM1 , ! QUANTITY = QUANTITY1.


// -- put --

tracks2_prime_ins(TRACK, RATING, ALBUM, QUANTITY) :- tracks2_prime(TRACK, RATING, ALBUM, QUANTITY) , ! tracks2(TRACK, RATING, ALBUM, QUANTITY).
tracks2_prime_del(TRACK, RATING, ALBUM, QUANTITY) :- tracks2(TRACK, RATING, ALBUM, QUANTITY) , ! tracks2_prime(TRACK, RATING, ALBUM, QUANTITY).

tracks1_prime_del(T1, D1, R1, A1, Q1) :- tracks2_prime_del(T1, R1, A1, Q1) , ! tracks2_prime_ins(T1, _, _, _) , tracks1(T1, D1, R1, A1, Q1).
tracks1_prime_ins(T, D, R, A, Q) :- tracks2_prime_ins(T, R, A, Q) , ! tracks2_prime_del(T, _, _, _) , ! tracks1(T, _, R, A, Q) , D = 2018 , ! tracks1(T, D, R, A, Q) , ! tracks1(T, _, _, _, _).
tracks1_prime_del(TRACK, D1, RATING, ALBUM, QUANTITY) :- tracks2_prime_del(TRACK, RATING, ALBUM, QUANTITY) , tracks2_prime_ins(TRACK, RATING, ALBUM, QUANTITY1) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! QUANTITY = QUANTITY1.
tracks1_prime_ins(TRACK, D, RATING, ALBUM, QUANTITY1) :- tracks2_prime_del(TRACK, RATING, ALBUM, QUANTITY) , tracks2_prime_ins(TRACK, RATING, ALBUM, QUANTITY1) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! QUANTITY = QUANTITY1.
tracks1_prime_del(TRACK, D1, RATING, ALBUM, QUANTITY) :- tracks2_prime_del(TRACK, RATING, ALBUM, QUANTITY) , tracks2_prime_ins(TRACK, RATING, ALBUM1, QUANTITY) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! ALBUM = ALBUM1.
tracks1_prime_ins(TRACK, D, RATING, ALBUM1, QUANTITY) :- tracks2_prime_del(TRACK, RATING, ALBUM, QUANTITY) , tracks2_prime_ins(TRACK, RATING, ALBUM1, QUANTITY) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! ALBUM = ALBUM1.
tracks1_prime_del(TRACK, D1, RATING, ALBUM, QUANTITY) :- tracks2_prime_del(TRACK, RATING, ALBUM, QUANTITY) , tracks2_prime_ins(TRACK, RATING, ALBUM1, QUANTITY1) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! ALBUM = ALBUM1 , ! QUANTITY = QUANTITY1.
tracks1_prime_ins(TRACK, D, RATING, ALBUM1, QUANTITY1) :- tracks2_prime_del(TRACK, RATING, ALBUM, QUANTITY) , tracks2_prime_ins(TRACK, RATING, ALBUM1, QUANTITY1) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! ALBUM = ALBUM1 , ! QUANTITY = QUANTITY1.
tracks1_prime_del(TRACK, D1, RATING, ALBUM, QUANTITY) :- tracks2_prime_del(TRACK, RATING, ALBUM, QUANTITY) , tracks2_prime_ins(TRACK, RATING1, ALBUM, QUANTITY) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! RATING = RATING1.
tracks1_prime_ins(TRACK, D, RATING1, ALBUM, QUANTITY) :- tracks2_prime_del(TRACK, RATING, ALBUM, QUANTITY) , tracks2_prime_ins(TRACK, RATING1, ALBUM, QUANTITY) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! RATING = RATING1.
tracks1_prime_del(TRACK, D1, RATING, ALBUM, QUANTITY) :- tracks2_prime_del(TRACK, RATING, ALBUM, QUANTITY) , tracks2_prime_ins(TRACK, RATING1, ALBUM, QUANTITY1) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! RATING = RATING1 , ! QUANTITY = QUANTITY1.
tracks1_prime_ins(TRACK, D, RATING1, ALBUM, QUANTITY1) :- tracks2_prime_del(TRACK, RATING, ALBUM, QUANTITY) , tracks2_prime_ins(TRACK, RATING1, ALBUM, QUANTITY1) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! RATING = RATING1 , ! QUANTITY = QUANTITY1.
tracks1_prime_del(TRACK, D1, RATING, ALBUM, QUANTITY) :- tracks2_prime_del(TRACK, RATING, ALBUM, QUANTITY) , tracks2_prime_ins(TRACK, RATING1, ALBUM1, QUANTITY) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! RATING = RATING1 , ! ALBUM = ALBUM1.
tracks1_prime_ins(TRACK, D, RATING1, ALBUM1, QUANTITY) :- tracks2_prime_del(TRACK, RATING, ALBUM, QUANTITY) , tracks2_prime_ins(TRACK, RATING1, ALBUM1, QUANTITY) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! RATING = RATING1 , ! ALBUM = ALBUM1.
tracks1_prime_del(TRACK, D1, RATING, ALBUM, QUANTITY) :- tracks2_prime_del(TRACK, RATING, ALBUM, QUANTITY) , tracks2_prime_ins(TRACK, RATING1, ALBUM1, QUANTITY1) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! RATING = RATING1 , ! ALBUM = ALBUM1 , ! QUANTITY = QUANTITY1.
tracks1_prime_ins(TRACK, D, RATING1, ALBUM1, QUANTITY1) :- tracks2_prime_del(TRACK, RATING, ALBUM, QUANTITY) , tracks2_prime_ins(TRACK, RATING1, ALBUM1, QUANTITY1) , tracks1(TRACK, D1, RATING, ALBUM, QUANTITY) , D = 2018 , ! RATING = RATING1 , ! ALBUM = ALBUM1 , ! QUANTITY = QUANTITY1.

tracks1_prime(TRACK, DATE, RATING, ALBUM, QUANTITY) :- tracks1(TRACK, DATE, RATING, ALBUM, QUANTITY), ! tracks1_prime_del(TRACK, DATE, RATING, ALBUM, QUANTITY).
tracks1_prime(TRACK, DATE, RATING, ALBUM, QUANTITY) :- tracks1_prime_ins(TRACK, DATE, RATING, ALBUM, QUANTITY).


// -- output --

.output precondition

.output tracks1
.output tracks2_prime

.output tracks2
.output tracks1_prime